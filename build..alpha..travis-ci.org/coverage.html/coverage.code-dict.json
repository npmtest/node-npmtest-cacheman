{"/home/travis/build/npmtest/node-npmtest-cacheman/test.js":"/* istanbul instrument in package npmtest_cacheman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cacheman/lib.npmtest_cacheman.js":"/* istanbul instrument in package npmtest_cacheman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cacheman = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cacheman = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cacheman/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cacheman && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cacheman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cacheman\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cacheman.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_cacheman.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cacheman.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_cacheman.__dirname + '/lib.npmtest_cacheman.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cacheman/node_modules/cacheman/node/index.js":"'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ms = require('ms');\n\nvar _ms2 = _interopRequireDefault(_ms);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Module constants.\n */\n\nvar engines = ['memory', 'redis', 'mongo', 'file'];\n\n/**\n * Cacheman base error class.\n *\n * @constructor\n * @param {String} message\n * @api private\n */\n\nvar CachemanError = function (_Error) {\n  _inherits(CachemanError, _Error);\n\n  function CachemanError(message) {\n    _classCallCheck(this, CachemanError);\n\n    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(CachemanError).call(this, message));\n\n    var name = _this2.constructor.name;\n\n    _this2.name = name;\n    _this2.message = message;\n    Error.captureStackTrace(_this2, name);\n    return _this2;\n  }\n\n  return CachemanError;\n}(Error);\n\n/**\n * Helper to allow all async methods to support both callbacks and promises\n */\n\nfunction maybePromised(_this, callback, wrapped) {\n  if ('function' === typeof callback) {\n    // Call wrapped with unmodified callback\n    wrapped(callback);\n\n    // Return `this` to keep the same behaviour Cacheman had before promises were added\n    return _this;\n  } else {\n    var _Promise = _this.options.Promise;\n\n    if ('function' !== typeof _Promise) {\n      throw new CachemanError('Promises not available: Please polyfill native Promise before creating a Cacheman object, pass a Promise library as a Cacheman option, or use the callback interface');\n    }\n\n    if (_Promise.fromCallback) {\n      // Bluebird's fromCallback, this is faster than new Promise\n      return _Promise.fromCallback(wrapped);\n    }\n\n    // Standard new Promise based wrapper for native Promises\n    return new _Promise(function (resolve, reject) {\n      wrapped(function (err, value) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(value);\n        }\n      });\n    });\n  }\n}\n\n/**\n * Cacheman constructor.\n *\n * @param {String} name\n * @param {Object} options\n * @api public\n */\n\nvar Cacheman = function () {\n\n  /**\n   * Class constructor method.\n   *\n   * @param {String} name\n   * @param {Object} [options]\n   * @return {Cacheman} this\n   * @api public\n   */\n\n  function Cacheman(name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Cacheman);\n\n    if (name && 'object' === (typeof name === 'undefined' ? 'undefined' : _typeof(name))) {\n      options = name;\n      name = null;\n    }\n\n    var _Promise = options.Promise || function () {\n      try {\n        return Promise;\n      } catch (e) {}\n    }();\n\n    var _options = options;\n    var _options$prefix = _options.prefix;\n    var prefix = _options$prefix === undefined ? 'cacheman' : _options$prefix;\n    var _options$engine = _options.engine;\n    var engine = _options$engine === undefined ? 'memory' : _options$engine;\n    var _options$delimiter = _options.delimiter;\n    var delimiter = _options$delimiter === undefined ? ':' : _options$delimiter;\n    var _options$ttl = _options.ttl;\n    var ttl = _options$ttl === undefined ? 60 : _options$ttl;\n\n    if ('string' === typeof ttl) {\n      ttl = Math.round((0, _ms2.default)(ttl) / 1000);\n    }\n\n    prefix = [prefix, name || 'cache', ''].join(delimiter);\n    this.options = _extends({}, options, { Promise: _Promise, delimiter: delimiter, prefix: prefix, ttl: ttl, count: 1000 });\n    this._prefix = prefix;\n    this._ttl = ttl;\n    this._fns = [];\n    this.engine(engine);\n  }\n\n  /**\n   * Set get engine.\n   *\n   * @param {String} engine\n   * @param {Object} options\n   * @return {Cacheman} this\n   * @api public\n   */\n\n  _createClass(Cacheman, [{\n    key: 'engine',\n    value: function engine(_engine, options) {\n\n      if (!arguments.length) return this._engine;\n\n      var type = typeof _engine === 'undefined' ? 'undefined' : _typeof(_engine);\n\n      if (!/string|function|object/.test(type)) {\n        throw new CachemanError('Invalid engine format, engine must be a String, Function or a valid engine instance');\n      }\n\n      if ('string' === type) {\n\n        var Engine = undefined;\n\n        if (~Cacheman.engines.indexOf(_engine)) {\n          _engine = 'cacheman-' + _engine;\n        }\n\n        try {\n          Engine = require(_engine);\n        } catch (e) {\n          if (e.code === 'MODULE_NOT_FOUND') {\n            throw new CachemanError('Missing required npm module ' + _engine);\n          } else {\n            throw e;\n          }\n        }\n\n        this._engine = new Engine(options || this.options, this);\n      } else if ('object' === type) {\n        ['get', 'set', 'del', 'clear'].forEach(function (key) {\n          if ('function' !== typeof _engine[key]) {\n            throw new CachemanError('Invalid engine format, must be a valid engine instance');\n          }\n        });\n\n        this._engine = _engine;\n      } else {\n        this._engine = _engine(options || this.options, this);\n      }\n\n      return this;\n    }\n\n    /**\n     * Wrap key with prefix.\n     *\n     * @param {String} key\n     * @return {String}\n     * @api private\n     */\n\n  }, {\n    key: 'key',\n    value: function key(_key) {\n      if (Array.isArray(_key)) {\n        _key = _key.join(this.options.delimiter);\n      }\n      return this.options.engine === 'redis' ? _key : this._prefix + _key;\n    }\n\n    /**\n     * Sets up namespace middleware.\n     *\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'use',\n    value: function use(fn) {\n      this._fns.push(fn);\n      return this;\n    }\n\n    /**\n     * Executes the cache middleware.\n     *\n     * @param {String} key\n     * @param {Mixed} data\n     * @param {Number} ttl\n     * @param {Function} fn\n     * @api private\n     */\n\n  }, {\n    key: 'run',\n    value: function run(key, data, ttl, fn) {\n      var fns = this._fns.slice(0);\n      if (!fns.length) return fn(null);\n\n      var go = function go(i) {\n        fns[i](key, data, ttl, function (err, _data, _ttl, _force) {\n          // upon error, short-circuit\n          if (err) return fn(err);\n\n          // if no middleware left, summon callback\n          if (!fns[i + 1]) return fn(null, _data, _ttl, _force);\n\n          // go on to next\n          go(i + 1);\n        });\n      };\n\n      go(0);\n    }\n\n    /**\n     * Set an entry.\n     *\n     * @param {String} key\n     * @param {Mixed} data\n     * @param {Number} ttl\n     * @param {Function} [fn]\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'cache',\n    value: function cache(key, data, ttl, fn) {\n      var _this3 = this;\n\n      if ('function' === typeof ttl) {\n        fn = ttl;\n        ttl = null;\n      }\n\n      return maybePromised(this, fn, function (fn) {\n\n        _this3.get(key, function (err, res) {\n\n          _this3.run(key, res, ttl, function (_err, _data, _ttl, _force) {\n\n            if (err || _err) return fn(err || _err);\n\n            var force = false;\n\n            if ('undefined' !== typeof _data) {\n              force = true;\n              data = _data;\n            }\n\n            if ('undefined' !== typeof _ttl) {\n              force = true;\n              ttl = _ttl;\n            }\n\n            if ('undefined' === typeof res || force) {\n              return _this3.set(key, data, ttl, fn);\n            }\n\n            fn(null, res);\n          });\n        });\n      });\n    }\n\n    /**\n     * Get an entry.\n     *\n     * @param {String} key\n     * @param {Function} [fn]\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'get',\n    value: function get(key, fn) {\n      var _this4 = this;\n\n      return maybePromised(this, fn, function (fn) {\n        return _this4._engine.get(_this4.key(key), fn);\n      });\n    }\n\n    /**\n     * Set an entry.\n     *\n     * @param {String} key\n     * @param {Mixed} data\n     * @param {Number} ttl\n     * @param {Function} [fn]\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'set',\n    value: function set(key, data, ttl, fn) {\n      var _this5 = this;\n\n      if ('function' === typeof ttl) {\n        fn = ttl;\n        ttl = null;\n      }\n\n      if ('string' === typeof ttl) {\n        ttl = Math.round((0, _ms2.default)(ttl) / 1000);\n      }\n\n      return maybePromised(this, fn, function (fn) {\n        if ('string' !== typeof key && !Array.isArray(key)) {\n          return process.nextTick(function () {\n            fn(new CachemanError('Invalid key, key must be a string or array.'));\n          });\n        }\n\n        if ('undefined' === typeof data) {\n          return process.nextTick(fn);\n        }\n\n        return _this5._engine.set(_this5.key(key), data, ttl || _this5._ttl, fn);\n      });\n    }\n\n    /**\n     * Delete an entry.\n     *\n     * @param {String} key\n     * @param {Function} [fn]\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'del',\n    value: function del(key, fn) {\n      var _this6 = this;\n\n      if ('function' === typeof key) {\n        fn = key;\n        key = '';\n      }\n\n      return maybePromised(this, fn, function (fn) {\n        return _this6._engine.del(_this6.key(key), fn);\n      });\n    }\n\n    /**\n     * Clear all entries.\n     *\n     * @param {String} key\n     * @param {Function} [fn]\n     * @return {Cacheman} this\n     * @api public\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear(fn) {\n      var _this7 = this;\n\n      return maybePromised(this, fn, function (fn) {\n        return _this7._engine.clear(fn);\n      });\n    }\n\n    /**\n     * Wraps a function in cache. I.e., the first time the function is run,\n     * its results are stored in cache so subsequent calls retrieve from cache\n     * instead of calling the function.\n     *\n     * @param {String} key\n     * @param {Function} work\n     * @param {Number} ttl\n     * @param {Function} [fn]\n     * @api public\n     */\n\n  }, {\n    key: 'wrap',\n    value: function wrap(key, work, ttl, fn) {\n      var _this8 = this;\n\n      // Allow work and ttl to be passed in the oposite order to make promises nicer\n      if ('function' !== typeof work && 'function' === typeof ttl) {\n        var _ref = [work, ttl];\n        ttl = _ref[0];\n        work = _ref[1];\n      }\n\n      if ('function' === typeof ttl) {\n        fn = ttl;\n        ttl = null;\n      }\n\n      return maybePromised(this, fn, function (fn) {\n\n        _this8.get(key, function (err, res) {\n          if (err || res) return fn(err, res);\n\n          var _next = function next(err, data) {\n            if (err) return fn(err);\n            _this8.set(key, data, ttl, function (err) {\n              fn(err, data);\n            });\n\n            // Don't allow callbacks to be called twice\n            _next = function next() {\n              process.nextTick(function () {\n                throw new CachemanError('callback called twice');\n              });\n            };\n          };\n\n          if (work.length >= 1) {\n            var result = work(function (err, data) {\n              return _next(err, data);\n            });\n            if ('undefined' !== typeof result) {\n              process.nextTick(function () {\n                throw new CachemanError('return value cannot be used when callback argument is used');\n              });\n            }\n          } else {\n            try {\n              var result = work();\n              if ('object' === (typeof result === 'undefined' ? 'undefined' : _typeof(result)) && 'function' === typeof result.then) {\n                result.then(function (value) {\n                  return _next(null, value);\n                }).then(null, function (err) {\n                  return _next(err);\n                });\n              } else {\n                _next(null, result);\n              }\n            } catch (err) {\n              _next(err);\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return Cacheman;\n}();\n\nexports.default = Cacheman;\n\nCacheman.engines = engines;\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-cacheman/node_modules/cacheman/node/error.js":"'use strict';\n\n/**\n * Cacheman base error class.\n *\n * @constructor\n * @param {String} message\n * @param {EventEmitter} logger\n * @api public\n */\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CachemanError = (function (_Error) {\n  _inherits(CachemanError, _Error);\n\n  function CachemanError(message, logger) {\n    _classCallCheck(this, CachemanError);\n\n    _get(Object.getPrototypeOf(CachemanError.prototype), 'constructor', this).call(this, message);\n    this.name = this.constructor.name;\n    this.message = message;\n    Error.captureStackTrace(this, this.constructor.name);\n    if (logger) logger.emit('error', this);\n  }\n\n  return CachemanError;\n})(Error);\n\nexports['default'] = CachemanError;\nmodule.exports = exports['default'];"}